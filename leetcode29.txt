列竖式算除法。

dividend = 79
divisor = -8
sign = (dividend > 0) ^ (divisor > 0)
dividend = abs(dividend)
divisor = abs(divisor)
count = 0
res = 0
while dividend > divisor:
    count += 1
    divisor <<= 1
while count > 0:
    count -= 1
    divisor >>= 1
    res <<= 1
    if dividend >= divisor:
        res += 1
        dividend -= divisor
if sign:
    res = -res
if -(1 << 31) <= res <= (1 << 31) - 1:
    print(res)
else:
    print((1 << 31) - 1)

理解之后的大神版本：
        sign = (dividend > 0) ^ (divisor > 0)
        dividend = abs(dividend)
        divisor = abs(divisor)
        count = 0
        result = 0
        #把除数不断左移，直到它大于被除数
        while dividend >= divisor:
            count += 1
            divisor <<= 1
        while count > 0:
            count -= 1
            divisor >>= 1
            if divisor <= dividend:
                result += 1 << count #这里的移位运算是把二进制（第count+1位上的1）转换为十进制
                dividend -= divisor
        if sign: 
            result = -result
        return result if -(1<<31) <= result <= (1<<31)-1 else (1<<31)-1 
